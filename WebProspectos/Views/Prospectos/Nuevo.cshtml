@model WebProspectos.Models.ViewModels.ProspectoViewModel
@{
    ViewBag.Title = "Nuevo prospecto";
}

<h2>Nuevo prospecto</h2>
<br />
<div class="col-7">
    <div class="d-flex justify-content-center">
        <form class="row g-3 border rounded" action="/Prospectos/Nuevo" method="post" enctype="multipart/form-data">
            <div class="col-md-12">
                <label class="form-label">Nombre</label>
                @Html.TextBoxFor(d => d.Nombre, new { @class = "form-control" + (ViewData.ModelState["Nombre"]?.Errors.Count > 0 ? " is-invalid" : "") })
            </div>
            <div class="col-md-6">
                <label class="form-label">Primer apellido</label>
                @Html.TextBoxFor(d => d.PrimerApellido, new { @class = "form-control" + (ViewData.ModelState["PrimerApellido"]?.Errors.Count > 0 ? " is-invalid" : "") })
            </div>
            <div class="col-md-6">
                <div>
                    <label class="form-label">Segundo apellido</label>
                    <label class="text-secondary">(Opcional)</label>
                </div>
                @Html.TextBoxFor(d => d.SegundoApellido, new { @class = "form-control" })
            </div>
            <div class="col-md-12">
                <label class="form-label">Teléfono</label>
                @Html.TextBoxFor(d => d.Telefono, new { @class = "form-control" + (ViewData.ModelState["Telefono"]?.Errors.Count > 0 ? " is-invalid" : ""), @placeholder = "000-000-00-00" })
            </div>
            <div class="col-md-12">
                <label class="form-label">RFC</label>
                @Html.TextBoxFor(d => d.Rfc, new { @class = "form-control" + (ViewData.ModelState["Rfc"]?.Errors.Count > 0 ? " is-invalid" : "") })
            </div>
            <div class="col-md-6">
                <label class="form-label">Calle</label>
                @Html.TextBoxFor(d => d.Calle, new { @class = "form-control" + (ViewData.ModelState["Calle"]?.Errors.Count > 0 ? " is-invalid" : "") })
            </div>
            <div class="col-md-6">
                <label class="form-label">Número</label>
                @Html.TextBoxFor(d => d.Numero, new { @class = "form-control" + (ViewData.ModelState["Numero"]?.Errors.Count > 0 ? " is-invalid" : "") })
            </div>
            <div class="col-md-6">
                <label class="form-label">Colonia</label>
                @Html.TextBoxFor(d => d.Colonia, new { @class = "form-control" + (ViewData.ModelState["Colonia"]?.Errors.Count > 0 ? " is-invalid" : "") })
            </div>
            <div class="col-md-6">
                <label class="form-label">Código postal</label>
                @Html.TextBoxFor(d => d.CodigoPostal, new { @class = "form-control" + (ViewData.ModelState["CodigoPostal"]?.Errors.Count > 0 ? " is-invalid" : "") })
            </div>
            <div>
                <label>Archivos</label>
                <input name="lsArchivos" type="file" multiple class="form-control" />
            </div>

            <div class="d-flex col-md-5 justify-content-md-between mt-3 mb-3">
                <button type="button" class="btn btn-outline-secondary" onclick="confirmarSalida()">Salir</button>
                <input type="submit" class="btn btn-success" value="Guardar" />
            </div>
        </form>
    </div>
</div>
<script>
    function confirmarSalida() {
        Swal.fire({
            title: '¿Está seguro de que desea salir? (ningún dato será guardado)',
            showCancelButton: true,
            icon: 'question',
            confirmButtonText: 'Si',
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '/Prospectos';
            }
        })
    }
</script>

